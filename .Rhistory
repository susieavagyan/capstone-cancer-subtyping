dataName="/data/mut_cnv_onehot.csv"
dat=read.csv(dataName, header=T)
dataName="./data/mut_cnv_onehot.csv"
dat=read.csv(dataName, header=T)
FSM=read.table("result/FSM.txt", header=F, sep="\t", skip=1)
FSM=read.table("results/xgene/FSM.txt", header=F, sep="\t", skip=1)
FSM[which(FSM==NA)]=0
WM=read.table("results/xgene/WM.txt", header=F, sep="\t", skip=1)
dat1 <- dat %>% select_if(colnames(dat) %in% WM$V1)
library(dplyr)
library(tidyr)
dat1 <- dat %>% select_if(colnames(dat) %in% WM$V1)
dat2 <-  dat %>% dplyr::select(patient_id)
dat <- cbind(dat2, dat1)
WM = WM[WM$V1 %in% colnames(dat),]
FSM = FSM[FSM$V1 %in% colnames(dat),]
p=nrow(dat)
e=ncol(dat)
w=nrow(WM)
m=match(gsub("-",".",as.character(WM[,1])),names(dat), nomatch=0)
SMIM=matrix(as.integer(dat[,m]!="0"),p,w)
M2=WM[,-1]*FSM[,-1]
M2=as.matrix(M2)
M2=as.vector(M2)
ix=which(is.na(M2)==T)
M2[ix]=0
M2=matrix(M2,w,w)
ix=which(colSums(SMIM)!=0)
SMIM=SMIM[,ix]
M2=M2[ix,ix]
D=matrix(0,p,p)
ng=2                           #the number of driver gene pairs to be considered
for(i in 1:(p-1)){ #print (i)
for(j in (i+1):p){
r=which(SMIM[i,]==1)
c=which(SMIM[j,]==1)
lc=length(c)
lr=length(r)
s=rep(0,ng)
if(min(length(c),length(r))>0){
M3=matrix(0,lr+5,lc+5)
M3[1:lr,1:lc]=M2[r,c]
for(l in 1:ng){
s[l]=max(M3,na.rm=T);ix=which(M3==s[l],arr.ind=T)
M3=M3[-ix[1],-ix[2]]
}
}
D[i,j]=sum(s)/ng
}
}
D=1-(D+t(D))
diag(D)=0
row.names(D)=as.character(dat$bcr_patient_barcode)
outputName="result/col_coadread/distance.txt"
write.table(D, file=outputName, col.names=F, row.names=T, sep="\t", quote=F)
outputName="results/xgene/col_coadread/distance.txt"
write.table(D, file=outputName, col.names=F, row.names=T, sep="\t", quote=F)
outputName="results/xgene/distance.txt"
write.table(D, file=outputName, col.names=F, row.names=T, sep="\t", quote=F)
